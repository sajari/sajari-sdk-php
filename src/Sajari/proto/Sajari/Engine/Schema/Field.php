<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sajari/engine/schema/schema.proto

namespace Sajari\Engine\Schema;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Field defines the properties of of a field in the schema.
 * </pre>
 *
 * Protobuf type <code>sajari.engine.schema.Field</code>
 */
class Field extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * ID used internally
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    private $id = 0;
    /**
     * <pre>
     * Name of the field.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    private $name = '';
    /**
     * <pre>
     * Description of the field.
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    private $description = '';
    /**
     * <pre>
     * Type of the field.
     * </pre>
     *
     * <code>.sajari.engine.schema.Field.Type type = 4;</code>
     */
    private $type = 0;
    /**
     * <pre>
     * Repeated sets that fields are repeated values (i.e. a list of values).
     * </pre>
     *
     * <code>bool repeated = 5;</code>
     */
    private $repeated = false;
    /**
     * <pre>
     * Required sets that the field must be specified when adding new documents.
     * </pre>
     *
     * <code>bool required = 6;</code>
     */
    private $required = false;
    /**
     * <pre>
     * Store is set to false if original values should not be stored. Ideal for large text
     * fields that need to be indexed but will never be returned in results.
     * </pre>
     *
     * <code>bool store = 7;</code>
     */
    private $store = false;
    /**
     * <pre>
     * Indexed is set to true if this field should be indexed into a reverse index.
     * Only string and string array fields can be indexed.
     * </pre>
     *
     * <code>bool indexed = 8;</code>
     */
    private $indexed = false;
    /**
     * <pre>
     * Unique is set to true if this field should contain unique values. Unique
     * fields also support indexing to assist with fast document lookups
     * </pre>
     *
     * <code>bool unique = 9;</code>
     */
    private $unique = false;

    public function __construct() {
        \GPBMetadata\Sajari\Engine\Schema\Schema::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * ID used internally
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * <pre>
     * ID used internally
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    public function setId($var)
    {
        GPBUtil::checkUint32($var);
        $this->id = $var;
    }

    /**
     * <pre>
     * Name of the field.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     * Name of the field.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     * Description of the field.
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * <pre>
     * Description of the field.
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;
    }

    /**
     * <pre>
     * Type of the field.
     * </pre>
     *
     * <code>.sajari.engine.schema.Field.Type type = 4;</code>
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * <pre>
     * Type of the field.
     * </pre>
     *
     * <code>.sajari.engine.schema.Field.Type type = 4;</code>
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Sajari\Engine\Schema\Field_Type::class);
        $this->type = $var;
    }

    /**
     * <pre>
     * Repeated sets that fields are repeated values (i.e. a list of values).
     * </pre>
     *
     * <code>bool repeated = 5;</code>
     */
    public function getRepeated()
    {
        return $this->repeated;
    }

    /**
     * <pre>
     * Repeated sets that fields are repeated values (i.e. a list of values).
     * </pre>
     *
     * <code>bool repeated = 5;</code>
     */
    public function setRepeated($var)
    {
        GPBUtil::checkBool($var);
        $this->repeated = $var;
    }

    /**
     * <pre>
     * Required sets that the field must be specified when adding new documents.
     * </pre>
     *
     * <code>bool required = 6;</code>
     */
    public function getRequired()
    {
        return $this->required;
    }

    /**
     * <pre>
     * Required sets that the field must be specified when adding new documents.
     * </pre>
     *
     * <code>bool required = 6;</code>
     */
    public function setRequired($var)
    {
        GPBUtil::checkBool($var);
        $this->required = $var;
    }

    /**
     * <pre>
     * Store is set to false if original values should not be stored. Ideal for large text
     * fields that need to be indexed but will never be returned in results.
     * </pre>
     *
     * <code>bool store = 7;</code>
     */
    public function getStore()
    {
        return $this->store;
    }

    /**
     * <pre>
     * Store is set to false if original values should not be stored. Ideal for large text
     * fields that need to be indexed but will never be returned in results.
     * </pre>
     *
     * <code>bool store = 7;</code>
     */
    public function setStore($var)
    {
        GPBUtil::checkBool($var);
        $this->store = $var;
    }

    /**
     * <pre>
     * Indexed is set to true if this field should be indexed into a reverse index.
     * Only string and string array fields can be indexed.
     * </pre>
     *
     * <code>bool indexed = 8;</code>
     */
    public function getIndexed()
    {
        return $this->indexed;
    }

    /**
     * <pre>
     * Indexed is set to true if this field should be indexed into a reverse index.
     * Only string and string array fields can be indexed.
     * </pre>
     *
     * <code>bool indexed = 8;</code>
     */
    public function setIndexed($var)
    {
        GPBUtil::checkBool($var);
        $this->indexed = $var;
    }

    /**
     * <pre>
     * Unique is set to true if this field should contain unique values. Unique
     * fields also support indexing to assist with fast document lookups
     * </pre>
     *
     * <code>bool unique = 9;</code>
     */
    public function getUnique()
    {
        return $this->unique;
    }

    /**
     * <pre>
     * Unique is set to true if this field should contain unique values. Unique
     * fields also support indexing to assist with fast document lookups
     * </pre>
     *
     * <code>bool unique = 9;</code>
     */
    public function setUnique($var)
    {
        GPBUtil::checkBool($var);
        $this->unique = $var;
    }

}

