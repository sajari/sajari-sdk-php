<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sajari/engine/schema/schema.proto

namespace Sajari\Engine\Schema;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Mutation is a mutation of a schema field.
 * </pre>
 *
 * Protobuf type <code>sajari.engine.schema.MutateFieldRequest.Mutation</code>
 */
class MutateFieldRequest_Mutation extends \Google\Protobuf\Internal\Message
{
    protected $mutation;

    public function __construct() {
        \GPBMetadata\Sajari\Engine\Schema\Schema::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Name is a new name for the field.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function getName()
    {
        return $this->readOneof(1);
    }

    /**
     * <pre>
     * Name is a new name for the field.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);
    }

    /**
     * <pre>
     * Description is the new description for the field.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    public function getDescription()
    {
        return $this->readOneof(2);
    }

    /**
     * <pre>
     * Description is the new description for the field.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);
    }

    /**
     * <pre>
     * Type changes the underlying type of the field.
     * </pre>
     *
     * <code>.sajari.engine.schema.Field.Type type = 3;</code>
     */
    public function getType()
    {
        return $this->readOneof(3);
    }

    /**
     * <pre>
     * Type changes the underlying type of the field.
     * </pre>
     *
     * <code>.sajari.engine.schema.Field.Type type = 3;</code>
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Sajari\Engine\Schema\Field_Type::class);
        $this->writeOneof(3, $var);
    }

    /**
     * <pre>
     * Repeated sets whether the field values are repeated.
     * </pre>
     *
     * <code>bool repeated = 4;</code>
     */
    public function getRepeated()
    {
        return $this->readOneof(4);
    }

    /**
     * <pre>
     * Repeated sets whether the field values are repeated.
     * </pre>
     *
     * <code>bool repeated = 4;</code>
     */
    public function setRepeated($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(4, $var);
    }

    /**
     * <pre>
     * Required sets whether the field value is required for index documents.
     * </pre>
     *
     * <code>bool required = 5;</code>
     */
    public function getRequired()
    {
        return $this->readOneof(5);
    }

    /**
     * <pre>
     * Required sets whether the field value is required for index documents.
     * </pre>
     *
     * <code>bool required = 5;</code>
     */
    public function setRequired($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(5, $var);
    }

    /**
     * <pre>
     * Unique sets whether the field must contain unique values.
     * </pre>
     *
     * <code>bool unique = 6;</code>
     */
    public function getUnique()
    {
        return $this->readOneof(6);
    }

    /**
     * <pre>
     * Unique sets whether the field must contain unique values.
     * </pre>
     *
     * <code>bool unique = 6;</code>
     */
    public function setUnique($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(6, $var);
    }

    /**
     * <pre>
     * Indexed sets whether the field data is indexed.
     * </pre>
     *
     * <code>bool indexed = 7;</code>
     */
    public function getIndexed()
    {
        return $this->readOneof(7);
    }

    /**
     * <pre>
     * Indexed sets whether the field data is indexed.
     * </pre>
     *
     * <code>bool indexed = 7;</code>
     */
    public function setIndexed($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(7, $var);
    }

    public function getMutation()
    {
        return $this->whichOneof("mutation");
    }

}

