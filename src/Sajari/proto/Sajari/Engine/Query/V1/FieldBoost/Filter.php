<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sajari/engine/query/v1/query.proto

namespace Sajari\Engine\Query\V1\FieldBoost;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Filter is a boost applied to records which satisfy a filter.
 *
 * Generated from protobuf message <code>sajari.engine.query.v1.FieldBoost.Filter</code>
 */
class Filter extends \Google\Protobuf\Internal\Message
{
    /**
     * Filter which must be satisfied by record.
     *
     * Generated from protobuf field <code>.sajari.engine.query.v1.Filter filter = 1;</code>
     */
    private $filter = null;
    /**
     * Boost value to apply to matching records. Must be >= 0.
     * Value == 0     Matching records get 0 for this boost, everything else gets 1.
     * Value == 1     Matching records get 1 for this boost, everything else gets 0.
     * 0 < Value < 1  Matching records get Value for this boost (and are penalised).
     * Value > 1      Matching records get 1 for this boost, everything else gets 1 / Value.
     *
     * Generated from protobuf field <code>double value = 2;</code>
     */
    private $value = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Sajari\Engine\Query\V1\Filter $filter
     *           Filter which must be satisfied by record.
     *     @type float $value
     *           Boost value to apply to matching records. Must be >= 0.
     *           Value == 0     Matching records get 0 for this boost, everything else gets 1.
     *           Value == 1     Matching records get 1 for this boost, everything else gets 0.
     *           0 < Value < 1  Matching records get Value for this boost (and are penalised).
     *           Value > 1      Matching records get 1 for this boost, everything else gets 1 / Value.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Sajari\Engine\Query\V1\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * Filter which must be satisfied by record.
     *
     * Generated from protobuf field <code>.sajari.engine.query.v1.Filter filter = 1;</code>
     * @return \Sajari\Engine\Query\V1\Filter
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Filter which must be satisfied by record.
     *
     * Generated from protobuf field <code>.sajari.engine.query.v1.Filter filter = 1;</code>
     * @param \Sajari\Engine\Query\V1\Filter $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkMessage($var, \Sajari\Engine\Query\V1\Filter::class);
        $this->filter = $var;

        return $this;
    }

    /**
     * Boost value to apply to matching records. Must be >= 0.
     * Value == 0     Matching records get 0 for this boost, everything else gets 1.
     * Value == 1     Matching records get 1 for this boost, everything else gets 0.
     * 0 < Value < 1  Matching records get Value for this boost (and are penalised).
     * Value > 1      Matching records get 1 for this boost, everything else gets 1 / Value.
     *
     * Generated from protobuf field <code>double value = 2;</code>
     * @return float
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * Boost value to apply to matching records. Must be >= 0.
     * Value == 0     Matching records get 0 for this boost, everything else gets 1.
     * Value == 1     Matching records get 1 for this boost, everything else gets 0.
     * 0 < Value < 1  Matching records get Value for this boost (and are penalised).
     * Value > 1      Matching records get 1 for this boost, everything else gets 1 / Value.
     *
     * Generated from protobuf field <code>double value = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->value = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Filter::class, \Sajari\Engine\Query\V1\FieldBoost_Filter::class);

