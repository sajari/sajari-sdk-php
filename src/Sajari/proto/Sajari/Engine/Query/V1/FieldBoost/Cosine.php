<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sajari/engine/query/v1/query.proto

namespace Sajari\Engine\Query\V1\FieldBoost;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>sajari.engine.query.v1.FieldBoost.Cosine</code>
 */
class Cosine extends \Google\Protobuf\Internal\Message
{
    /**
     * Field containing the vector data.
     *
     * Generated from protobuf field <code>string field = 1;</code>
     */
    private $field = '';
    /**
     * Vector to compute cosine against.
     *
     * Generated from protobuf field <code>repeated float vector = 2;</code>
     */
    private $vector;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $field
     *           Field containing the vector data.
     *     @type float[]|\Google\Protobuf\Internal\RepeatedField $vector
     *           Vector to compute cosine against.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Sajari\Engine\Query\V1\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * Field containing the vector data.
     *
     * Generated from protobuf field <code>string field = 1;</code>
     * @return string
     */
    public function getField()
    {
        return $this->field;
    }

    /**
     * Field containing the vector data.
     *
     * Generated from protobuf field <code>string field = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setField($var)
    {
        GPBUtil::checkString($var, True);
        $this->field = $var;

        return $this;
    }

    /**
     * Vector to compute cosine against.
     *
     * Generated from protobuf field <code>repeated float vector = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getVector()
    {
        return $this->vector;
    }

    /**
     * Vector to compute cosine against.
     *
     * Generated from protobuf field <code>repeated float vector = 2;</code>
     * @param float[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setVector($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FLOAT);
        $this->vector = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Cosine::class, \Sajari\Engine\Query\V1\FieldBoost_Cosine::class);

