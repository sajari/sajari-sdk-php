<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sajari/engine/query/v1/query.proto

namespace Sajari\Engine\Query\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Filter describes a set of conditions to match values in document fields.
 * Filters can be nested and combined using Combinators.
 * </pre>
 *
 * Protobuf type <code>sajari.engine.query.v1.Filter</code>
 */
class Filter extends \Google\Protobuf\Internal\Message
{
    protected $filter;

    public function __construct() {
        \GPBMetadata\Sajari\Engine\Query\V1\Query::initOnce();
        parent::__construct();
    }

    /**
     * <code>.sajari.engine.query.v1.Filter.Combinator combinator = 1;</code>
     */
    public function getCombinator()
    {
        return $this->readOneof(1);
    }

    /**
     * <code>.sajari.engine.query.v1.Filter.Combinator combinator = 1;</code>
     */
    public function setCombinator(&$var)
    {
        GPBUtil::checkMessage($var, \Sajari\Engine\Query\V1\Filter_Combinator::class);
        $this->writeOneof(1, $var);
    }

    /**
     * <code>.sajari.engine.query.v1.Filter.Field field = 2;</code>
     */
    public function getField()
    {
        return $this->readOneof(2);
    }

    /**
     * <code>.sajari.engine.query.v1.Filter.Field field = 2;</code>
     */
    public function setField(&$var)
    {
        GPBUtil::checkMessage($var, \Sajari\Engine\Query\V1\Filter_Field::class);
        $this->writeOneof(2, $var);
    }

    /**
     * <code>.sajari.engine.query.v1.Filter.Geo geo = 3;</code>
     */
    public function getGeo()
    {
        return $this->readOneof(3);
    }

    /**
     * <code>.sajari.engine.query.v1.Filter.Geo geo = 3;</code>
     */
    public function setGeo(&$var)
    {
        GPBUtil::checkMessage($var, \Sajari\Engine\Query\V1\Filter_Geo::class);
        $this->writeOneof(3, $var);
    }

    public function getFilter()
    {
        return $this->filter;
    }

}

