<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sajari/engine/query/v1/query.proto

namespace Sajari\Engine\Query\V1\Aggregate;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Bucket groups records using filters, Records which satisfy the filter
 * will be included in the bucket.
 *
 * Generated from protobuf message <code>sajari.engine.query.v1.Aggregate.Bucket</code>
 */
class Bucket extends \Google\Protobuf\Internal\Message
{
    /**
     * List of buckets.
     *
     * Generated from protobuf field <code>repeated .sajari.engine.query.v1.Aggregate.Bucket.Bucket buckets = 1;</code>
     */
    private $buckets;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Sajari\Engine\Query\V1\Aggregate\Bucket\Bucket[]|\Google\Protobuf\Internal\RepeatedField $buckets
     *           List of buckets.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Sajari\Engine\Query\V1\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * List of buckets.
     *
     * Generated from protobuf field <code>repeated .sajari.engine.query.v1.Aggregate.Bucket.Bucket buckets = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getBuckets()
    {
        return $this->buckets;
    }

    /**
     * List of buckets.
     *
     * Generated from protobuf field <code>repeated .sajari.engine.query.v1.Aggregate.Bucket.Bucket buckets = 1;</code>
     * @param \Sajari\Engine\Query\V1\Aggregate\Bucket\Bucket[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setBuckets($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Sajari\Engine\Query\V1\Aggregate\Bucket\Bucket::class);
        $this->buckets = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Bucket::class, \Sajari\Engine\Query\V1\Aggregate_Bucket::class);

