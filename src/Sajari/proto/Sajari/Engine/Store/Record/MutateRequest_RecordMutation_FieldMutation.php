<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sajari/engine/store/record/record.proto

namespace Sajari\Engine\Store\Record;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * MutateField defines a mutation of a field.
 * </pre>
 *
 * Protobuf type <code>sajari.engine.store.record.MutateRequest.RecordMutation.FieldMutation</code>
 */
class MutateRequest_RecordMutation_FieldMutation extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Field is the name of the field to mutate.
     * </pre>
     *
     * <code>string field = 1;</code>
     */
    private $field = '';
    protected $mutation;

    public function __construct() {
        \GPBMetadata\Sajari\Engine\Store\Record\Record::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Field is the name of the field to mutate.
     * </pre>
     *
     * <code>string field = 1;</code>
     */
    public function getField()
    {
        return $this->field;
    }

    /**
     * <pre>
     * Field is the name of the field to mutate.
     * </pre>
     *
     * <code>string field = 1;</code>
     */
    public function setField($var)
    {
        GPBUtil::checkString($var, True);
        $this->field = $var;
    }

    /**
     * <pre>
     * Set overrides the current value with the value in set.
     * </pre>
     *
     * <code>.sajari.engine.Value set = 2;</code>
     */
    public function getSet()
    {
        return $this->readOneof(2);
    }

    /**
     * <pre>
     * Set overrides the current value with the value in set.
     * </pre>
     *
     * <code>.sajari.engine.Value set = 2;</code>
     */
    public function setSet(&$var)
    {
        GPBUtil::checkMessage($var, \Sajari\Engine\Value::class);
        $this->writeOneof(2, $var);
    }

    /**
     * <pre>
     * Increment takes the current value and incremenets it using the
     * numerical representation of incremenet.  Can only be used on numeric
     * fields.
     * Not yet implemented.
     * </pre>
     *
     * <code>.sajari.engine.Value increment = 3;</code>
     */
    public function getIncrement()
    {
        return $this->readOneof(3);
    }

    /**
     * <pre>
     * Increment takes the current value and incremenets it using the
     * numerical representation of incremenet.  Can only be used on numeric
     * fields.
     * Not yet implemented.
     * </pre>
     *
     * <code>.sajari.engine.Value increment = 3;</code>
     */
    public function setIncrement(&$var)
    {
        GPBUtil::checkMessage($var, \Sajari\Engine\Value::class);
        $this->writeOneof(3, $var);
    }

    /**
     * <pre>
     * Append takes the current value and appends a new element to the
     * end.  Can only be used on array fields.
     * Not yet implemented.
     * </pre>
     *
     * <code>.sajari.engine.Value append = 4;</code>
     */
    public function getAppend()
    {
        return $this->readOneof(4);
    }

    /**
     * <pre>
     * Append takes the current value and appends a new element to the
     * end.  Can only be used on array fields.
     * Not yet implemented.
     * </pre>
     *
     * <code>.sajari.engine.Value append = 4;</code>
     */
    public function setAppend(&$var)
    {
        GPBUtil::checkMessage($var, \Sajari\Engine\Value::class);
        $this->writeOneof(4, $var);
    }

    public function getMutation()
    {
        return $this->mutation;
    }

}

