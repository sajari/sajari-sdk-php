<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sajari/engine/store/term/term.proto

namespace Sajari\Engine\Store\Term;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Term information
 * </pre>
 *
 * Protobuf type <code>sajari.engine.store.term.Infos.Info</code>
 */
class Infos_Info extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Internal identifier for term.
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    private $id = 0;
    /**
     * <pre>
     * String representation.
     * </pre>
     *
     * <code>string value = 2;</code>
     */
    private $value = '';
    /**
     * <pre>
     * Number of documents that contain the term.
     * </pre>
     *
     * <code>uint32 num_docs = 3;</code>
     */
    private $num_docs = 0;
    /**
     * <pre>
     * Number of words in the term.
     * </pre>
     *
     * <code>uint32 num_words = 4;</code>
     */
    private $num_words = 0;
    /**
     * <pre>
     * Hardcoded score attributed to the term.
     * </pre>
     *
     * <code>uint32 hardcoded = 5;</code>
     */
    private $hardcoded = 0;
    /**
     * <pre>
     * Infogain score attributed to the term.
     * </pre>
     *
     * <code>uint32 infogain = 6;</code>
     */
    private $infogain = 0;
    /**
     * <pre>
     * Positive interactions (count).
     * </pre>
     *
     * <code>uint32 pos = 7;</code>
     */
    private $pos = 0;
    /**
     * <pre>
     * Negative interactions (count).
     * </pre>
     *
     * <code>uint32 neg = 8;</code>
     */
    private $neg = 0;

    public function __construct() {
        \GPBMetadata\Sajari\Engine\Store\Term\Term::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Internal identifier for term.
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * <pre>
     * Internal identifier for term.
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    public function setId($var)
    {
        GPBUtil::checkUint32($var);
        $this->id = $var;
    }

    /**
     * <pre>
     * String representation.
     * </pre>
     *
     * <code>string value = 2;</code>
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * <pre>
     * String representation.
     * </pre>
     *
     * <code>string value = 2;</code>
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->value = $var;
    }

    /**
     * <pre>
     * Number of documents that contain the term.
     * </pre>
     *
     * <code>uint32 num_docs = 3;</code>
     */
    public function getNumDocs()
    {
        return $this->num_docs;
    }

    /**
     * <pre>
     * Number of documents that contain the term.
     * </pre>
     *
     * <code>uint32 num_docs = 3;</code>
     */
    public function setNumDocs($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_docs = $var;
    }

    /**
     * <pre>
     * Number of words in the term.
     * </pre>
     *
     * <code>uint32 num_words = 4;</code>
     */
    public function getNumWords()
    {
        return $this->num_words;
    }

    /**
     * <pre>
     * Number of words in the term.
     * </pre>
     *
     * <code>uint32 num_words = 4;</code>
     */
    public function setNumWords($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_words = $var;
    }

    /**
     * <pre>
     * Hardcoded score attributed to the term.
     * </pre>
     *
     * <code>uint32 hardcoded = 5;</code>
     */
    public function getHardcoded()
    {
        return $this->hardcoded;
    }

    /**
     * <pre>
     * Hardcoded score attributed to the term.
     * </pre>
     *
     * <code>uint32 hardcoded = 5;</code>
     */
    public function setHardcoded($var)
    {
        GPBUtil::checkUint32($var);
        $this->hardcoded = $var;
    }

    /**
     * <pre>
     * Infogain score attributed to the term.
     * </pre>
     *
     * <code>uint32 infogain = 6;</code>
     */
    public function getInfogain()
    {
        return $this->infogain;
    }

    /**
     * <pre>
     * Infogain score attributed to the term.
     * </pre>
     *
     * <code>uint32 infogain = 6;</code>
     */
    public function setInfogain($var)
    {
        GPBUtil::checkUint32($var);
        $this->infogain = $var;
    }

    /**
     * <pre>
     * Positive interactions (count).
     * </pre>
     *
     * <code>uint32 pos = 7;</code>
     */
    public function getPos()
    {
        return $this->pos;
    }

    /**
     * <pre>
     * Positive interactions (count).
     * </pre>
     *
     * <code>uint32 pos = 7;</code>
     */
    public function setPos($var)
    {
        GPBUtil::checkUint32($var);
        $this->pos = $var;
    }

    /**
     * <pre>
     * Negative interactions (count).
     * </pre>
     *
     * <code>uint32 neg = 8;</code>
     */
    public function getNeg()
    {
        return $this->neg;
    }

    /**
     * <pre>
     * Negative interactions (count).
     * </pre>
     *
     * <code>uint32 neg = 8;</code>
     */
    public function setNeg($var)
    {
        GPBUtil::checkUint32($var);
        $this->neg = $var;
    }

}

