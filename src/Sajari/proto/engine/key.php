<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: engine/key.proto
//   Date: 2017-01-10 02:02:10

namespace sajariGen\engine {

  class Key extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $field = null;
    
    /**  @var \sajariGen\engine\Value */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'sajari.engine.Key');

      // OPTIONAL STRING field = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "field";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\sajariGen\engine\Value';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <field> has a value
     *
     * @return boolean
     */
    public function hasField(){
      return $this->_has(1);
    }
    
    /**
     * Clear <field> value
     *
     * @return \sajariGen\engine\Key
     */
    public function clearField(){
      return $this->_clear(1);
    }
    
    /**
     * Get <field> value
     *
     * @return string
     */
    public function getField(){
      return $this->_get(1);
    }
    
    /**
     * Set <field> value
     *
     * @param string $value
     * @return \sajariGen\engine\Key
     */
    public function setField( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \sajariGen\engine\Key
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return \sajariGen\engine\Value
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param \sajariGen\engine\Value $value
     * @return \sajariGen\engine\Key
     */
    public function setValue(\sajariGen\engine\Value $value){
      return $this->_set(2, $value);
    }
  }
}

