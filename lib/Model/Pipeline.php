<?php
/**
 * Pipeline
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Sajari
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@sajari.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Sajari\Model;

use \ArrayAccess;
use Sajari\ObjectSerializer;

/**
 * Pipeline Class Doc Comment
 *
 * @category Class
 * @package  Sajari
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Pipeline implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
     * The original name of the model.
     *
     * @var string
     */
    protected static $openAPIModelName = "Pipeline";

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @var string[]
     */
    protected static $openAPITypes = [
        "create_time" => "\DateTime",
        "type" => "\Sajari\Model\PipelineType",
        "name" => "string",
        "version" => "string",
        "description" => "string",
        "pre_steps" => "\Sajari\Model\PipelineStep[]",
        "post_steps" => "\Sajari\Model\PipelineStep[]",
        "collection_default" => "bool",
        "default_version" => "bool",
    ];

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @var string[]
     * @phpstan-var array<string, string|null>
     * @psalm-var array<string, string|null>
     */
    protected static $openAPIFormats = [
        "create_time" => "date-time",
        "type" => null,
        "name" => null,
        "version" => null,
        "description" => null,
        "pre_steps" => null,
        "post_steps" => null,
        "collection_default" => "boolean",
        "default_version" => "boolean",
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        "create_time" => "create_time",
        "type" => "type",
        "name" => "name",
        "version" => "version",
        "description" => "description",
        "pre_steps" => "pre_steps",
        "post_steps" => "post_steps",
        "collection_default" => "collection_default",
        "default_version" => "default_version",
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        "create_time" => "setCreateTime",
        "type" => "setType",
        "name" => "setName",
        "version" => "setVersion",
        "description" => "setDescription",
        "pre_steps" => "setPreSteps",
        "post_steps" => "setPostSteps",
        "collection_default" => "setCollectionDefault",
        "default_version" => "setDefaultVersion",
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        "create_time" => "getCreateTime",
        "type" => "getType",
        "name" => "getName",
        "version" => "getVersion",
        "description" => "getDescription",
        "pre_steps" => "getPreSteps",
        "post_steps" => "getPostSteps",
        "collection_default" => "getCollectionDefault",
        "default_version" => "getDefaultVersion",
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container["create_time"] = $data["create_time"] ?? null;
        $this->container["type"] = $data["type"] ?? null;
        $this->container["name"] = $data["name"] ?? null;
        $this->container["version"] = $data["version"] ?? null;
        $this->container["description"] = $data["description"] ?? null;
        $this->container["pre_steps"] = $data["pre_steps"] ?? null;
        $this->container["post_steps"] = $data["post_steps"] ?? null;
        $this->container["collection_default"] =
            $data["collection_default"] ?? null;
        $this->container["default_version"] = $data["default_version"] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container["type"] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container["name"] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container["version"] === null) {
            $invalidProperties[] = "'version' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets create_time
     *
     * @return \DateTime|null
     */
    public function getCreateTime()
    {
        return $this->container["create_time"];
    }

    /**
     * Sets create_time
     *
     * @param \DateTime|null $create_time Output only. Creation time of the pipeline.
     *
     * @return self
     */
    public function setCreateTime($create_time)
    {
        $this->container["create_time"] = $create_time;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \Sajari\Model\PipelineType
     */
    public function getType()
    {
        return $this->container["type"];
    }

    /**
     * Sets type
     *
     * @param \Sajari\Model\PipelineType $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container["type"] = $type;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container["name"];
    }

    /**
     * Sets name
     *
     * @param string $name The pipeline's name.  Must start with an alphanumeric character followed by one or more alphanumeric, `_`, `-` or `.` characters. Strictly speaking, it must match the regular expression: `^[a-zA-Z0-9][a-zA-Z0-9_\\-\\.]+$`.
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container["name"] = $name;

        return $this;
    }

    /**
     * Gets version
     *
     * @return string
     */
    public function getVersion()
    {
        return $this->container["version"];
    }

    /**
     * Sets version
     *
     * @param string $version The pipeline's version.  Must start with an alphanumeric character followed by one or more alphanumeric, `_`, `-` or `.` characters. Strictly speaking, it must match the regular expression: `^[a-zA-Z0-9][a-zA-Z0-9_\\-\\.]+$`.
     *
     * @return self
     */
    public function setVersion($version)
    {
        $this->container["version"] = $version;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container["description"];
    }

    /**
     * Sets description
     *
     * @param string|null $description Description of the pipeline.
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container["description"] = $description;

        return $this;
    }

    /**
     * Gets pre_steps
     *
     * @return \Sajari\Model\PipelineStep[]|null
     */
    public function getPreSteps()
    {
        return $this->container["pre_steps"];
    }

    /**
     * Sets pre_steps
     *
     * @param \Sajari\Model\PipelineStep[]|null $pre_steps Pre-steps are run before an indexing operation or query request is sent to the search index.
     *
     * @return self
     */
    public function setPreSteps($pre_steps)
    {
        $this->container["pre_steps"] = $pre_steps;

        return $this;
    }

    /**
     * Gets post_steps
     *
     * @return \Sajari\Model\PipelineStep[]|null
     */
    public function getPostSteps()
    {
        return $this->container["post_steps"];
    }

    /**
     * Sets post_steps
     *
     * @param \Sajari\Model\PipelineStep[]|null $post_steps Post-steps are run after an indexing operation or query request has been sent to the search index.  For indexing operations, the post-steps only run when creating new records. They do not run when updating records.  For querying, the post-steps have access to the result-set. This makes it possible to act on the results before sending them back to the caller.
     *
     * @return self
     */
    public function setPostSteps($post_steps)
    {
        $this->container["post_steps"] = $post_steps;

        return $this;
    }

    /**
     * Gets collection_default
     *
     * @return bool|null
     */
    public function getCollectionDefault()
    {
        return $this->container["collection_default"];
    }

    /**
     * Sets collection_default
     *
     * @param bool|null $collection_default Output only. Indicates if the pipeline is the collection default pipeline.
     *
     * @return self
     */
    public function setCollectionDefault($collection_default)
    {
        $this->container["collection_default"] = $collection_default;

        return $this;
    }

    /**
     * Gets default_version
     *
     * @return bool|null
     */
    public function getDefaultVersion()
    {
        return $this->container["default_version"];
    }

    /**
     * Sets default_version
     *
     * @param bool|null $default_version Output only. Indicates if the pipeline is the default version.
     *
     * @return self
     */
    public function setDefaultVersion($default_version)
    {
        $this->container["default_version"] = $default_version;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
        return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
